---
components:
  schemas:
    ChallengesDeleted:
      additionalProperties: false
      properties:
        id:
          type: string
      required:
      - id
      type: object
    ChallengesReadable:
      additionalProperties: false
      properties:
        create_time:
          type: string
        descr:
          type: string
        id:
          type: string
        proposed_by:
          type: string
        title:
          type: string
        update_time:
          type: string
      required:
      - create_time
      - id
      - title
      - descr
      - update_time
      - proposed_by
      type: object
    ChallengesUpdatable:
      additionalProperties: false
      minProperties: 1
      properties:
        descr:
          type: string
        proposed_by:
          type: string
        title:
          type: string
      type: object
    ChallengesWriteable:
      additionalProperties: false
      properties:
        descr:
          type: string
        proposed_by:
          type: string
        title:
          type: string
      required:
      - title
      - descr
      - proposed_by
      type: object
    PostCommentLikesDeleted:
      additionalProperties: false
      properties:
        comment_id:
          type: string
        liked_by:
          type: string
      required:
      - comment_id
      - liked_by
      type: object
    PostCommentLikesReadable:
      additionalProperties: false
      properties:
        comment_id:
          type: string
        liked_by:
          type: string
      required:
      - comment_id
      - liked_by
      type: object
    PostCommentLikesWriteable:
      additionalProperties: false
      properties:
        comment_id:
          type: string
        liked_by:
          type: string
      required:
      - comment_id
      - liked_by
      type: object
    PostCommentsDeleted:
      additionalProperties: false
      properties:
        id:
          type: string
      required:
      - id
      type: object
    PostCommentsReadable:
      additionalProperties: false
      properties:
        create_time:
          type: string
        id:
          type: string
        message:
          type: string
        post_id:
          type: string
        writed_by:
          type: string
      required:
      - post_id
      - message
      - writed_by
      - create_time
      - id
      type: object
    PostCommentsUpdatable:
      additionalProperties: false
      minProperties: 1
      properties:
        message:
          type: string
        post_id:
          type: string
        writed_by:
          type: string
      type: object
    PostCommentsWriteable:
      additionalProperties: false
      properties:
        message:
          type: string
        post_id:
          type: string
        writed_by:
          type: string
      required:
      - post_id
      - message
      - writed_by
      type: object
    PostLikesDeleted:
      additionalProperties: false
      properties:
        liked_by:
          type: string
        post_id:
          type: string
      required:
      - post_id
      - liked_by
      type: object
    PostLikesReadable:
      additionalProperties: false
      properties:
        liked_by:
          type: string
        post_id:
          type: string
      required:
      - post_id
      - liked_by
      type: object
    PostLikesWriteable:
      additionalProperties: false
      properties:
        liked_by:
          type: string
        post_id:
          type: string
      required:
      - post_id
      - liked_by
      type: object
    PostsDeleted:
      additionalProperties: false
      properties:
        id:
          type: string
      required:
      - id
      type: object
    PostsReadable:
      additionalProperties: false
      properties:
        body:
          type: string
        challenge_id:
          type: string
        create_time:
          type: string
        id:
          type: string
        title:
          type: string
        writed_by:
          type: string
      required:
      - create_time
      - body
      - id
      - writed_by
      - challenge_id
      - title
      type: object
    PostsUpdatable:
      additionalProperties: false
      minProperties: 1
      properties:
        body:
          type: string
        challenge_id:
          type: string
        title:
          type: string
        writed_by:
          type: string
      type: object
    PostsWriteable:
      additionalProperties: false
      properties:
        body:
          type: string
        challenge_id:
          type: string
        title:
          type: string
        writed_by:
          type: string
      required:
      - body
      - writed_by
      - challenge_id
      - title
      type: object
    ProfilesDeleted:
      additionalProperties: false
      properties:
        id:
          type: string
      required:
      - id
      type: object
    ProfilesReadable:
      additionalProperties: false
      properties:
        id:
          type: string
        reg_date:
          type: string
        username:
          type: string
      required:
      - id
      - username
      - reg_date
      type: object
    ProfilesUpdatable:
      additionalProperties: false
      minProperties: 1
      properties:
        username:
          type: string
      type: object
    ProfilesWriteable:
      additionalProperties: false
      properties:
        id:
          type: string
        username:
          type: string
      required:
      - id
      - username
      type: object
info:
  title: OpenAPI definition for Doojon
  version: 0.0.1
openapi: 3.0.3
paths:
  /api/resource/challenges:
    delete:
      parameters:
      - description: id for challenges
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Challenges
    get:
      parameters:
      - description: id for challenges
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesReadable'
          description: Readable object for challenges
      tags:
      - Challenges
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengesWriteable'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Challenges
    put:
      parameters:
      - description: id for challenges
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Challenges
  /api/resource/post_comment_likes:
    delete:
      parameters:
      - description: id for post_comment_likes
        in: query
        name: comment_id
        required: true
        schema:
          type: string
      - description: id for post_comment_likes
        in: query
        name: liked_by
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  comment_id:
                    type: string
                  liked_by:
                    type: string
                required:
                - comment_id
                - liked_by
                type: object
          description: Object with created id/ids (comment_id,liked_by)
      tags:
      - Post Comment Likes
    get:
      parameters:
      - description: id for post_comment_likes
        in: query
        name: comment_id
        required: true
        schema:
          type: string
      - description: id for post_comment_likes
        in: query
        name: liked_by
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCommentLikesReadable'
          description: Readable object for post_comment_likes
      tags:
      - Post Comment Likes
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCommentLikesWriteable'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  comment_id:
                    type: string
                  liked_by:
                    type: string
                required:
                - comment_id
                - liked_by
                type: object
          description: Object with created id/ids (comment_id,liked_by)
      tags:
      - Post Comment Likes
  /api/resource/post_comments:
    delete:
      parameters:
      - description: id for post_comments
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Post Comments
    get:
      parameters:
      - description: id for post_comments
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCommentsReadable'
          description: Readable object for post_comments
      tags:
      - Post Comments
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCommentsWriteable'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Post Comments
    put:
      parameters:
      - description: id for post_comments
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Post Comments
  /api/resource/post_likes:
    delete:
      parameters:
      - description: id for post_likes
        in: query
        name: post_id
        required: true
        schema:
          type: string
      - description: id for post_likes
        in: query
        name: liked_by
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  liked_by:
                    type: string
                  post_id:
                    type: string
                required:
                - post_id
                - liked_by
                type: object
          description: Object with created id/ids (post_id,liked_by)
      tags:
      - Post Likes
    get:
      parameters:
      - description: id for post_likes
        in: query
        name: post_id
        required: true
        schema:
          type: string
      - description: id for post_likes
        in: query
        name: liked_by
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLikesReadable'
          description: Readable object for post_likes
      tags:
      - Post Likes
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLikesWriteable'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  liked_by:
                    type: string
                  post_id:
                    type: string
                required:
                - post_id
                - liked_by
                type: object
          description: Object with created id/ids (post_id,liked_by)
      tags:
      - Post Likes
  /api/resource/posts:
    delete:
      parameters:
      - description: id for posts
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Posts
    get:
      parameters:
      - description: id for posts
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostsReadable'
          description: Readable object for posts
      tags:
      - Posts
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostsWriteable'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Posts
    put:
      parameters:
      - description: id for posts
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Posts
  /api/resource/profiles:
    delete:
      parameters:
      - description: id for profiles
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Profiles
    get:
      parameters:
      - description: id for profiles
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilesReadable'
          description: Readable object for profiles
      tags:
      - Profiles
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfilesWriteable'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Profiles
    put:
      parameters:
      - description: id for profiles
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                - id
                type: object
          description: Object with created id/ids (id)
      tags:
      - Profiles
